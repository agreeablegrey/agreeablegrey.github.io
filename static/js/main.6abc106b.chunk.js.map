{"version":3,"sources":["components/d3/AlyeskaContourMap.js","components/pages/contours-vis.js","App.js","index.js"],"names":["features","x","y","name","description","labels","rotation","label","range","begin","end","step","Array","array_size","Math","ceil","fill","map","num","i","createMap","ref","a","width","margin","top","right","bottom","left","height","svg","select","current","attr","tooltip","style","data","elevationData","rows","cols","large_thresholds","small_thresholds","thresholds","concat","contours","d3","size","projection","fitWidth","g","append","path","interpolateTerrain","threshold","hsvcolor","interpolateHsvLong","color","domain","zoomed","transform","contour","selectAll","enter","d","on","event","mouse","node","html","text","call","zoom","extent","scaleExtent","translateExtent","AlyeskaContourMap","svgRef","useRef","useEffect","className","ContoursVis","Container","border","App","fluid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6abc106b.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport {select} from 'd3-selection';\nimport * as d3 from'd3';\nimport {interpolateHsvLong} from 'd3-hsv';\nimport {zoom} from 'd3-zoom';\nimport '../../css/d3-styles.css'\nimport * as elevationData from '../../datasets/alyeska-elevation.json';\n\nconst features = [\n  {x: 128.5, y: 85.25, name: 'Baumann Bump', description: '1006m'},\n  {x: 148, y: 68.5, name: 'Mount Alyeska', description: '1200m'},\n  {x: 154.25, y: 89, name: 'Hibbs Peak', description: '1348m'},\n  {x: 107, y: 216.5, name: 'Pyramid Peak', description: '1002m'},\n  {x: 161.75, y: 149.75, name: 'Bramble Knoll', description: '988m'},\n  {x: 198, y: 93, name: 'HighBrush Peak', description: '1423m'},\n  {x: 210, y: 159, name: 'Blueberry Hill', description: '1275m'},\n  {x: 167.5, y: 37.5, name: 'Notch Mountain', description: '91m'},\n  {x: 52, y: 38, name: 'Gentoo Peak', description: '1278m'},\n  {x: 39.5, y: 70, name: 'Chinstrap Peak', description: '1102m'},\n  {x: 24.5, y: 84, name: 'Crested Peak', description: '1075m'},\n];\n\nconst labels = [\n  {x: 55, y: 140, rotation: 25, label: 'Turnagain Arm'},\n  {x: 90, y: 87, rotation: -55, label: 'Girdwood'},\n];\n\nconst range = (begin,end,step=1) => {\n  if (step > end) { return Array(); }\n  const array_size = Math.ceil((end - begin) / step);\n  return Array(array_size).fill(begin).map((num, i) => num + (i * step));\n}\n\nconst createMap = async(ref) => {\n  const margin = {top: 0, right: 0, bottom: 0, left: 0};\n  const svgWidth = 1000;\n  const svgHeight = 1300;\n  const width = svgWidth - margin.left - margin.right;\n  const height = svgHeight - margin.bottom - margin.top;\n  const svg = select(ref.current)\n    .attr('viewBox', '0 0 ' + width + ' ' + height );\n  \n  const tooltip = select('.tooltip')\n    .style(\"opacity\", 0);\n  \n  const data = elevationData.values;\n  const rows = elevationData.rows;\n  const cols = elevationData.cols;\n\n  const large_thresholds = range(25,1575,50);\n  const small_thresholds = range(0,20,5);\n  const thresholds = small_thresholds.concat(large_thresholds);\n\n  const contours = d3.contours().size([cols, rows]);\n\n  const projection = d3.geoIdentity()\n    .fitWidth(width, contours(data)[0]);\n\n  const g = svg.append('g');\n\n  const path = d3.geoPath()\n    .projection(projection);\n  \n  const interpolateTerrain = (threshold) => {\n    const hsvcolor = interpolateHsvLong('#035406', '#ffe0db');\n    return threshold === 0 ? '#7da0ad' : hsvcolor(threshold);\n  };\n  let color = d3.scaleSequential(interpolateTerrain).domain(d3.extent(data));\n\n\n  const zoomed = ({transform}) => {\n    g.attr('transform', transform);\n  }\n\n  for (const threshold of thresholds) {\n    g.append('path')\n      .attr('d', path(contours.contour(data, threshold)))\n      .attr('fill', color(threshold))\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1)\n      .style('stroke-dasharray', () => {return (threshold < 20) ? ('3, 3') : null})\n  }\n\n  g.selectAll('features')\n    .data(features)\n    .enter()\n    .append('circle')\n    .attr('cx', (d) => { return projection([d.x,d.y])[0]; })\n    .attr('cy', (d) => { return projection([d.x,d.y])[1]; })\n    .attr('r', '7px')\n    .attr('fill', 'red')\n    .on('mouseover', (event,d) => {\n      let mouse = d3.pointer(event, svg.node());\n      tooltip.html(\n        `<p>${d.name} - ${d.description}</p>`\n      )\n      .style(\"left\", (mouse[0]) + \"px\")\n      .style(\"top\", (mouse[1]) + \"px\")\n      .style(\"opacity\", 0.9);\n    })\n    .on('mouseout', (event,d) => {\n      tooltip.style(\"opacity\", 0);\n    });\n\n  g.selectAll('text')\n    .data(labels)\n    .enter()\n    .append('text')\n    .attr('transform', (d) => {return `translate(${projection([d.x,d.y])[0]},${projection([d.x,d.y])[1]})rotate(${d.rotation})`})\n    .attr('letter-spacing', 3)\n    .text((d) => { return d.label; });\n\n  svg.call(zoom()\n    .extent([[0, 0], [width, height]])\n    .scaleExtent([1, 3])\n    .translateExtent([[0, 0], [width, height]])\n    .on('zoom', zoomed));\n\n}\n\nconst AlyeskaContourMap = () => {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    createMap(svgRef);\n  }, []);\n\n  return (\n    <div>\n      <div className='tooltip'></div>\n      <svg ref={svgRef} />\n    </div>\n    )\n}\n\nexport default AlyeskaContourMap;","import React from 'react';\nimport AlyeskaContourMap from '../d3/AlyeskaContourMap';\nimport Container from 'react-bootstrap/Container';\n\nconst ContoursVis = () => {\n  return(\n    <Container>\n      <div className='row no-gutters'>\n        <div className='col'>\n          <h1 className='text-center'>Alyeska Contour Map</h1>\n        </div>\n      </div>\n      <div className='row no-gutters'>\n        <div className='col' style={{border: '10px solid black'}}>\n          <AlyeskaContourMap />\n        </div>\n      </div>\n      <div className='row'>\n      <div className='col'>\n          <p className='text-center mt-3'>An interactive contour map of Mount Alyeska and surrounding areas. Work in progress.</p>\n      </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default ContoursVis;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport ContoursVis from './components/pages/contours-vis'\n\nfunction App() {\n  return (\n    <Container fluid>\n      <ContoursVis />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}